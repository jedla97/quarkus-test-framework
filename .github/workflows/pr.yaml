name: "PR"
on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'
jobs:
  validate-format:
    name: Validate format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install required tools
        run: sudo apt update && sudo apt install pigz
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Build with Maven
        run: |
          mvn -V -B -s .github/mvn-settings.xml clean install -Pframework,examples -Dvalidate-format -DskipTests -DskipITs
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo-current-fw.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo-current-fw
          path: maven-repo-current-fw.tgz
          retention-days: 1
  quarkus-main-build:
    name: Quarkus 3.2 build
    runs-on: ubuntu-latest
    needs: validate-format
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install required tools
        run: sudo apt update && sudo apt install pigz
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Build Quarkus 3.2
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && git checkout 3.2 && ./mvnw -B -s .github/mvn-settings.xml clean install -Dquickly -Dno-test-modules -Prelocations
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo
          path: maven-repo.tgz
          retention-days: 1
  linux-build-jvm-latest:
    name: Linux - JVM build - Latest Version
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        quarkus-version: ["3.2.999-SNAPSHOT"]
        java: [ 11, 17 ]
    steps:
      - uses: actions/checkout@v4
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build Quarkus CLI
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus/devtools/cli && git checkout 3.2 && mvn -B -s ../../../.github/mvn-settings.xml clean install -Dquickly -Dno-test-modules -Prelocations
      - name: Install Quarkus CLI
        run: |
          cat <<EOF > ./quarkus-dev-cli
          #!/bin/bash
          java -jar $PWD/quarkus/devtools/cli/target/quarkus-cli-3.2.999-SNAPSHOT-runner.jar "\$@"
          EOF
          chmod +x ./quarkus-dev-cli
          ./quarkus-dev-cli version
      - name: Build in JVM mode
        run: |
          ./quarkus-dev-cli version
          ./quarkus-dev-cli --version
          ./quarkus-dev-cli -v
          ${PWD}/quarkus-dev-cli version
          ${PWD}/quarkus-dev-cli --version
          ${PWD}/quarkus-dev-cli -v
          mvn -B -fae -s .github/mvn-settings.xml clean install -Pframework,examples,extensions -Drun-cli-tests -pl quarkus-test-cli -Dts.quarkus.cli.cmd="${PWD}/quarkus-dev-cli" -Dquarkus.platform.version="${{ matrix.quarkus-version }}"
      - name: Zip Artifacts
        run: |
          zip -R artifacts-latest-linux-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ci-artifacts
          path: artifacts-latest-linux-jvm${{ matrix.java }}.zip